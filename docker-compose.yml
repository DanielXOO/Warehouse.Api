version: '3.9'

networks:
  warehouse-network:
    driver: bridge

services:
#  warehouse-api:
#    build: .
#    restart: always
#    container_name: warehouse-api
#    ports:
#      - "5050:80"
#    depends_on:
#      - warehouse-db-primary
#      - warehouse-db-secondary
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#    networks:
#      - warehouse-network
  
  warehouse-db-primary:
    image: mongo
    ports:
      - "30001:27017"
    restart: always
    container_name: warehouse-db-primary
    depends_on:
      - warehouse-db-secondary
    command: >
      mongod
      --replSet rs0
      --bind_ip localhost,warehouse-db-primary
    volumes:
      - /data/db0:/data/db
    networks:
      - warehouse-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand('ping').ok" ]
      interval: 30s
      timeout: 10s
      retries: 5

  warehouse-db-secondary:
    image: mongo
    ports:
      - "30002:27017"
    restart: always
    container_name: warehouse-db-secondary
    command: >
      mongod
      --replSet rs0
      --bind_ip localhost,warehouse-db-secondary
    volumes:
      - /data/db1:/data/db
    networks:
      - warehouse-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand('ping').ok" ]
      interval: 30s
      timeout: 10s
      retries: 5
      
  mongo-rs-init:
    image: mongo
    container_name: mongo-rs-init
    depends_on:
      - warehouse-db-primary
      - warehouse-db-secondary
    restart: on-failure
    command: /bin/bash -c "echo 'Script started'; /usr/local/bin/replica_set_init.sh; echo 'Script finished'"
    volumes:
      - ./scripts/replica_set_init.sh:/usr/local/bin/replica_set_init.sh:ro
    networks:
      - warehouse-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    
  warehouse-broker:
    image: confluentinc/cp-kafka
    container_name: warehouse-broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://warehouse-broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1